class Solution {
public:
    
    bool static cmp(pair<int,int>&a,pair<int,int>&b)
    {
        if(a.first==b.first)  // jodi dutor growtime same hoye jay,tobe jar planttime kom, take agey rakhbo
        {
            return a.second<b.second;
        }


        return a.first>=b.first;  // jar grow time beshi,take agey rakhbo
    }

    int earliestFullBloom(vector<int>& plant, vector<int>& grow) {
        
        int n=plant.size();

        vector<pair<int,int>>v; // {growtime,planttime}

        for(int i=0;i<n;i++)
        {
            v.push_back({grow[i],plant[i]});
        }

        sort(v.begin(),v.end(),cmp); // jar growtime besi, se agey thakbe

        int sum=0; // variable to accumulate plant times
        int ans=0; // final answer(earliest possible bloom day)


         // Iterate through the sorted vector of pairs
        for(int i=0;i<n;i++)
        {
            sum+=v[i].second;  // accumulate plant times

            // Calculate the earliest possible full bloom day
            // sum + v[i].first represents the day when the i-th flower blooms
            // ans keeps track of the maximum of all these days
            ans=max(ans,sum+v[i].first);
        }


        return ans;

        
    }
};
