int minimumCostOfBreaking(vector<int>x, vector<int>y, int n, int m){
        //Write your code here
        
        sort(x.begin(),x.end(),greater<int>());
        sort(y.begin(),y.end(),greater<int>());
        
        n=x.size();
        m=y.size();
        
        int i=0,j=0;
        
        int verticalcut=1,horizontalcut=1;
        
        int ans=0;
        
        while(i<n and j<m)
        {
            if(x[i]>y[j])
            {
                ans+=(x[i]*horizontalcut);
                
                verticalcut++;
                
                i++;
            }
            else
            {
                ans+=(y[j]*verticalcut);
                
                horizontalcut++;
                
                j++;
            }
        }
        
        
        while(i<n)
        {
            ans+=(x[i]*horizontalcut);
            
            i++;
        }
        
        while(j<m)
        {
            ans+=(y[j]*verticalcut);
            
            j++;
        }
        
        
        return ans;
        
    }
