class Solution {
public:
    int largestSumAfterKNegations(vector<int>& nums, int k) {
    
    // Sort the array
    sort(nums.begin(), nums.end());
    
    // Negate the smallest values first
    for (int i = 0; i < nums.size() && k > 0; ++i) 
    {
        if (nums[i] < 0) 
        {
            nums[i] = -nums[i];
            k--;
        }
    }
    
    // If there are remaining negations and k is odd, flip the smallest element
    if (k % 2 == 1) 
    {
        // Find the smallest element in the array
        int minElement = *min_element(nums.begin(), nums.end());
        
        return accumulate(nums.begin(), nums.end(), 0) - 2 * minElement;
    }
    
    // Return the sum of the modified array
    return accumulate(nums.begin(), nums.end(), 0);


    }
};
